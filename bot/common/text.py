from data.const import statuses_ru_with_emoji
from util import logger


def repair_request_text(repair_request: dict) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å HTML —Ä–∞–∑–º–µ—Ç–∫–æ–π
    
    Args:
        repair_request: —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞—è–≤–∫–∏
        
    Returns:
        —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏
    """
    lots_of_spaces = ' ' * 100
    
    executor = "–Ω–µ —É–∫–∞–∑–∞–Ω"
    if repair_request.get('contractor') is not None:
        if isinstance(repair_request['contractor'], dict) and 'name' in repair_request['contractor']:
            executor = repair_request['contractor']['name']
        else:
            executor = str(repair_request['contractor'])
    elif repair_request.get('managerId') is not None or repair_request.get('managerTgId') is not None:
        executor = repair_request.get('builder', '–ú–µ–Ω–µ–¥–∂–µ—Ä')
    
    status = repair_request.get('status')
    if isinstance(status, str):
        try:
            status = int(status)
        except (ValueError, TypeError):
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å {status} –≤ —á–∏—Å–ª–æ")
            status = 2  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é "–í —Ä–∞–±–æ—Ç–µ"
    
    return f"""
<b>–ó–∞—è–≤–∫–∞ ‚Ññ{repair_request.get('number')}{lots_of_spaces}&#x200D;</b>
<b>‚ñ∂Ô∏è–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ</b>: 
{repair_request.get('unit', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}

<b>‚ñ∂Ô∏è–û–±—ä–µ–∫—Ç</b>: 
üìç{repair_request.get('object', '–ù–µ —É–∫–∞–∑–∞–Ω')}

<b>‚ñ∂Ô∏è–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã</b>:
‚úçÔ∏è{repair_request.get('problemDescription', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}

<b>üë®‚Äçüîß–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</b>: 
üë§{executor if executor else '<i>–Ω–µ —É–∫–∞–∑–∞–Ω</i>'}

<b>–ü–ª–∞–Ω–æ–≤–∞—è –¥–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</b> {f"<u>{repair_request.get('planCompleteDate')}</u>" if repair_request.get('planCompleteDate') else "<i>–Ω–µ —É–∫–∞–∑–∞–Ω–æ</i>"}

<b>‚ñ∂Ô∏è–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏</b>: {statuses_ru_with_emoji.get(status, f"–°—Ç–∞—Ç—É—Å {status}")}
{("<b>üí∞–¶–µ–Ω–∞ —Ä–µ–º–æ–Ω—Ç–∞: </b>" + str(repair_request.get('repairPrice')) + "\n") if repair_request.get('repairPrice') is not None else ""}
<b>‚ùóÔ∏è–°—Ä–æ—á–Ω–æ—Å—Ç—å</b>: <i>{repair_request.get('urgency', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}</i>
<b>üí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</b>:
{repair_request.get('comment') if repair_request.get('comment') is not None else '<i>–Ω–µ—Ç</i>'}
"""
